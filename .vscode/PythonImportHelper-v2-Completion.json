[
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPBasic",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "HTTPBasicCredentials",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "utils.auth",
        "description": "utils.auth",
        "isExtraImport": true,
        "detail": "utils.auth",
        "documentation": {}
    },
    {
        "label": "HTMLResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "templates",
        "importPath": "settings",
        "description": "settings",
        "isExtraImport": true,
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "user_router",
        "importPath": "modules.users.router",
        "description": "modules.users.router",
        "isExtraImport": true,
        "detail": "modules.users.router",
        "documentation": {}
    },
    {
        "label": "uvicorn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uvicorn",
        "description": "uvicorn",
        "detail": "uvicorn",
        "documentation": {}
    },
    {
        "label": "user_router",
        "kind": 5,
        "importPath": "modules.users.router",
        "description": "modules.users.router",
        "peekOfCode": "user_router = APIRouter(tags=[\"User\"])\n@user_router.get(\"/profile\", response_class=HTMLResponse)\nasync def read_item(request: Request, user: HTTPBasicCredentials = Depends(get_current_user)):\n    # print(\"user-->\", user)\n    return templates.TemplateResponse(\n        request=request, name=\"users/profile.html\", context={\"username\": user['username']}\n    )\n@user_router.get(\"/profile/{username}\")\nasync def read_item(username: str, response: Response):\n    response.set_cookie(key=\"username\", value=username)",
        "detail": "modules.users.router",
        "documentation": {}
    },
    {
        "label": "root_router",
        "kind": 5,
        "importPath": "settings.routes",
        "description": "settings.routes",
        "peekOfCode": "root_router = APIRouter()\nfrom modules.users.router import user_router\nroot_router.include_router(user_router)",
        "detail": "settings.routes",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "kind": 2,
        "importPath": "utils.auth",
        "description": "utils.auth",
        "peekOfCode": "def get_current_user(\n        request: Request\n):\n    username = request.cookies.get(\"username\")\n    if username is None:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Not authenticated\",\n        )\n    return {\"username\": username}",
        "detail": "utils.auth",
        "documentation": {}
    }
]